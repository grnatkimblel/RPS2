name: Build and Deploy
on:
  push:
    branches:
      - Dockerize

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install Docker Compose
        run: |
          sudo apt update
          sudo apt install -y docker-compose

      - name: Build and Pull the Docker Compose images
        env:
          TAG: ${{ github.sha }}
          REACT_APP_HOST_URL: ${{ vars.DOMAIN_NAME }}
        run: |
          docker-compose -f docker-compose.prod.yml build --pull
          docker pull mysql:8.0

      - name: Save Docker images to tar files
        run: |
          docker save -o nginx.tar RPS2/nginx:${{ github.sha }}
          docker save -o server.tar RPS2/server:${{ github.sha }}
          docker save -o mysql.tar mysql:8.0

      - name: Write the github secrets to the secrets directory
        run: |
          mkdir secrets
          printf '%s\n' "${{ secrets.JWT_ACCESS_TOKEN_SECRET }}" > secrets/jwt_access_token_secret.txt
          printf '%s\n' "${{ secrets.JWT_REFRESH_TOKEN_SECRET }}" > secrets/jwt_refresh_token_secret.txt
          printf '%s\n' "${{ secrets.EMAIL }}" > secrets/email.txt
          printf '%s\n' "${{ secrets.DB_ROOT_PASSWORD }}" > secrets/db_root_password.txt
          printf '%s\n' "${{ secrets.DB_PASSWORD }}" > secrets/db_password.txt

      - name: Create the directory to copy over
        run: |
          mkdir deployment
          mv docker-compose.prod.yml deployment/
          mv nginx.tar deployment/
          mv server.tar deployment/
          mv mysql.tar deployment/
          mv ./secrets deployment/

      - name: SCP images and files to remote machine
        uses: appleboy/scp-action@v0.1.7
        env:
          USERNAME: ${{ secrets.SSH_USERNAME }}
        with:
          host: ${{ vars.DOMAIN_NAME }}
          port: ${{ secrets.SSH_PORT }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          overwrite: true
          source: ./deployment
          target: /home/${USERNAME}/Hosting/RPS Webserver/delivery

      - name: Deploy on the remote machine
        uses: appleboy/ssh-action@v1.2.1
        env:
          TAG: ${{ github.sha }}
          DOMAIN_NAME: ${{ vars.DOMAIN_NAME }}
        with:
          host: ${{ vars.DOMAIN_NAME }}
          port: ${{ secrets.SSH_PORT }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          script: |
            cd /home/${{secrets.SSH_USERNAME}}/Hosting/RPS Webserver/delivery/
            docker load -i ./nginx.tar
            docker load -i ./server.tar
            docker load -i ./mysql.tar
            docker compose down
            TAG=${TAG} REACT_APP_HOST_URL=${DOMAIN_NAME} docker-compose -f docker-compose.prod.yml up -d --remove-orphans
