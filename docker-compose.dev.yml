services:
  client-legacy:
    build:
      context: .
      dockerfile: ./client/dev.Dockerfile
      args:
        - REACT_APP_HOST_URL=http://localhost:8080/
    volumes:
      - ./client:/usr/app
      - ./sharedCode:/usr/app/src/shared
      - /usr/app/node_modules # Preserve built node_modules gen during image build time so it isnt overwritten when local ./client is mounted
    container_name: client-legacy
    environment:
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
      - WDS_SOCKET_PORT=0
    networks:
      - public
    tty: true
    command: npm run start
    depends_on:
      - server-legacy

  nginx-legacy:
    image: nginx:1.20.1
    container_name: nginx-legacy
    volumes:
      - ./nginx/default.dev.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "8080:80"
    networks:
      - public
    depends_on:
      - server-legacy
      - client-legacy

  server-legacy:
    build:
      context: .
      dockerfile: ./server/dev.Dockerfile
      # args:
      #   - NODE_ENV=development
    container_name: server-legacy
    develop:
      watch:
        - action: sync
          path: /server
          target: /app
          ignore:
            - node_modules/
    environment:
      - JWT_ACCESS_TOKEN_SECRET=1234
      - JWT_REFRESH_TOKEN_SECRET=5678
    networks:
      - public
      # - private
    tty: true
    volumes:
      # - ./server:/usr/src/app
      # - ./sharedCode:/usr/src/app/shared
      - /usr/src/app/node_modules # anonymous volume for node_modules only
    command: npm run dev
    depends_on:
      db-dev-legacy:
        condition: service_healthy
      db-test-legacy:
        condition: service_healthy

  db-dev-legacy:
    image: mysql:8.0
    container_name: mysql-dev-legacy
    environment:
      MYSQL_ROOT_PASSWORD: pass
      MYSQL_DATABASE: database_dev
      MYSQL_USER: devuser
      MYSQL_PASSWORD: devpassword
    ports:
      - "3306:3306"
    volumes:
      - mysql_dev_data:/var/lib/mysql
    networks:
      - public
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  db-test-legacy:
    image: mysql:8.0
    container_name: mysql-test-legacy
    environment:
      MYSQL_ROOT_PASSWORD: pass
      MYSQL_DATABASE: database_test
      MYSQL_USER: testuser
      MYSQL_PASSWORD: testpassword
    ports:
      - "3307:3306"
    volumes:
      - mysql_test_data:/var/lib/mysql
    networks:
      - public
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  debug-helper:
    image: busybox
volumes:
  mysql_dev_data:
  mysql_test_data:

networks:
  public:
