version: "3"

services:
  server:
    build:
      args:
        - NODE_ENV=development
      context: ./server
      dockerfile: Dockerfile
    container_name: server
    networks:
      - public
      - private
    tty: true
    ports:
      - 3100:3100
      - 3200:3200
      - 3300:3300
    command: npm run dev
    depends_on:
      db-dev:
        condition: service_healthy
      db-test:
        condition: service_healthy

  client:
    build:
      context: "./client"
      dockerfile: Dockerfile
      args:
        - REACT_APP_HOST_URL=http://localhost:80/
    container_name: client
    networks:
      - public
    tty: true
    ports:
      - "3000:3000"
    command: npm run start
    depends_on:
      - server

  db-dev:
    image: mysql:8.0
    container_name: mysql-dev
    environment:
      MYSQL_ROOT_PASSWORD: pass
      MYSQL_DATABASE: database_dev
      MYSQL_USER: devuser
      MYSQL_PASSWORD: devpassword
    ports:
      - "3306:3306"
    volumes:
      - mysql_dev_data:/var/lib/mysql
    networks:
      - private
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  db-test:
    image: mysql:8.0
    container_name: mysql-test
    environment:
      MYSQL_ROOT_PASSWORD: pass
      MYSQL_DATABASE: database_test
      MYSQL_USER: testuser
      MYSQL_PASSWORD: testpassword
    ports:
      - "3307:3306"
    volumes:
      - mysql_test_data:/var/lib/mysql
    networks:
      - private
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  nginx:
    build:
      context: nginx
    container_name: nginx
    restart: always
    tty: true
    ports:
      - "80:80"
    networks:
      - public
    depends_on:
      - server
      - client

volumes:
  mysql_dev_data:
  mysql_test_data:

networks:
  public:
  private:
